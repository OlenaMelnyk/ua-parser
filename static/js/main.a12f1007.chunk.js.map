{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","deviceInfo","parser","UAParser","result","getResult","infoSections","engine","push","name","value","version","cpu","architecture","userOS","getOS","userDevice","getDevice","userBrowser","getBrowser","vendor","model","window","screen","width","height","availWidth","availHeight","innerWidth","innerHeight","devicePixelRatio","getDeviceInfo","className","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAgDaA,EAAgB,WAC3B,IAAMC,EA7Cc,WACpB,IAAMC,EAAS,IAAIC,IACbC,EAASF,EAAOG,YAChBC,EAAe,GAEjBF,EAAOG,QACTD,EAAaE,KAAK,CAAEC,KAAM,SAAUC,MAAM,GAAD,OAAKN,EAAOG,OAAOE,KAAnB,aAA4BL,EAAOG,OAAOI,WAGjFP,EAAOQ,IAAIC,cACbP,EAAaE,KAAK,CAAEC,KAAM,eAAgBC,MAAON,EAAOQ,IAAIC,eAG9D,IAAMC,EAASZ,EAAOa,QAChBC,EAAad,EAAOe,YACpBC,EAAchB,EAAOiB,aA0B3B,OAxBIL,GAAUA,EAAOL,MAAQK,EAAOH,SAClCL,EAAaE,KAAK,CAAEC,KAAM,KAAMC,MAAM,GAAD,OAAKI,EAAOL,KAAZ,aAAqBK,EAAOH,WAG/DK,IAAeA,EAAWI,QAAUJ,EAAWK,OACjDf,EAAaE,KAAK,CAAEC,KAAM,2BAA4BC,MAAM,GAAD,OAAKM,EAAWI,OAAhB,YAA0BJ,EAAWK,SAEhGf,EAAaE,KAAK,CAAEC,KAAM,SAAUC,MAAO,QAGzCQ,GAAeA,EAAYT,MAAQS,EAAYP,SACjDL,EAAaE,KAAK,CAAEC,KAAM,UAAWC,MAAM,GAAD,OAAKQ,EAAYT,KAAjB,aAA0BS,EAAYP,WAG9EW,SACEA,OAAOC,SACTjB,EAAaE,KAAK,CAAEC,KAAM,oBAAqBC,MAAM,GAAD,OAAKY,OAAOC,OAAOC,MAAnB,cAA8BF,OAAOC,OAAOE,UAChGnB,EAAaE,KAAK,CAAEC,KAAM,yBAA0BC,MAAM,GAAD,OAAKY,OAAOC,OAAOG,WAAnB,cAAmCJ,OAAOC,OAAOI,gBAG5GrB,EAAaE,KAAK,CAAEC,KAAM,qBAAsBC,MAAM,GAAD,OAAKY,OAAOM,WAAZ,cAA4BN,OAAOO,eACxFvB,EAAaE,KAAK,CAAEC,KAAM,qBAAsBC,MAAOY,OAAOQ,oBAGzDxB,EAIYyB,GAEnB,OACE,qBAAKC,UAAU,UAAf,SACE,yBAAQA,UAAU,iBAAlB,UACE,mBAAGA,UAAU,SAAb,0BACA,qBAAKA,UAAU,QAAf,SACG/B,GAAcA,EAAWgC,KAAI,gBAAGxB,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OAC5B,sBAAgBsB,UAAU,MAA1B,UACE,sBAAMA,UAAU,OAAhB,SAAwBvB,IACxB,sBAAMuB,UAAU,QAAhB,SAAyBtB,MAFjBD,cCpDtByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.a12f1007.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport UAParser from 'ua-parser-js';\n\nconst getDeviceInfo = () => {\n  const parser = new UAParser();\n  const result = parser.getResult();\n  const infoSections = [];\n\n  if (result.engine) {\n    infoSections.push({ name: 'Engine', value: `${result.engine.name} v${result.engine.version}` });\n  }\n\n  if (result.cpu.architecture) {\n    infoSections.push({ name: 'Architecture', value: result.cpu.architecture });\n  }\n\n  const userOS = parser.getOS();\n  const userDevice = parser.getDevice();\n  const userBrowser = parser.getBrowser();\n\n  if (userOS && userOS.name && userOS.version) {\n    infoSections.push({ name: 'OS', value: `${userOS.name} v${userOS.version}` });\n  }\n\n  if (userDevice && (userDevice.vendor || userDevice.model)) {\n    infoSections.push({ name: 'Device (vendor or model)', value: `${userDevice.vendor} ${userDevice.model}` });\n  } else {\n    infoSections.push({ name: 'Device', value: 'N/A' });\n  }\n\n  if (userBrowser && userBrowser.name && userBrowser.version) {\n    infoSections.push({ name: 'Browser', value: `${userBrowser.name} v${userBrowser.version}` });\n  }\n\n  if (window) {\n    if (window.screen) {\n      infoSections.push({ name: 'Screen resolution', value: `${window.screen.width} x ${window.screen.height}` });\n      infoSections.push({ name: 'Available screen space', value: `${window.screen.availWidth} x ${window.screen.availHeight}` });\n    }\n\n    infoSections.push({ name: 'Browser width size', value: `${window.innerWidth} x ${window.innerHeight}` });\n    infoSections.push({ name: 'Device pixel ratio', value: window.devicePixelRatio });\n  }\n\n  return infoSections;\n};\n\nexport const App: React.FC = () => {\n  const deviceInfo = getDeviceInfo();\n\n  return (\n    <div className=\"starter\">\n      <header className=\"starter-header\">\n        <p className=\"header\">Device Info:</p>\n        <div className=\"table\">\n          {deviceInfo && deviceInfo.map(({ name, value }) => (\n            <div key={name} className=\"row\">\n              <span className=\"info\">{name}</span>\n              <span className=\"value\">{value}</span>\n            </div>\n          ))}\n        </div>\n      </header>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}